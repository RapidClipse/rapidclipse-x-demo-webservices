
package com.rapidclipse.demo.webservices.ui;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;

import org.glassfish.jersey.client.authentication.HttpAuthenticationFeature;

import com.google.gson.Gson;
import com.rapidclipse.demo.webservices.api.transferables.CustomerTransferable;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.details.Details;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.formlayout.FormLayout.FormItem;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.InitialPageSettings;
import com.vaadin.flow.server.PageConfigurator;


/**
 *
 */
@Route("")
public class MainLayout extends VerticalLayout implements PageConfigurator
{
	private final String urlString = "http://localhost:8080/rapidclipse-x-demo-webservices/webservices/get/";

	/**
	 *
	 */
	public MainLayout()
	{
		super();
		this.initUI();
	}
	
	@Override
	public void configurePage(final InitialPageSettings settings)
	{
		settings.addLink("shortcut icon", "frontend/images/favicon.ico");
		settings.addFavIcon("icon", "frontend/images/favicon256.png", "256x256");
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #cmdSend}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdSend_onClick(final ClickEvent<Button> event)
	{
		final Client client = ClientBuilder.newClient();
		
		final WebTarget target   = client.target(this.urlString + this.txtSource.getValue());
		final String    response = target.request().get(String.class);

		this.txtResponse.setValue(response);
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #cmdSendSecure}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdSendSecure_onClick(final ClickEvent<Button> event)
	{
		final HttpAuthenticationFeature token = HttpAuthenticationFeature.basic("admin", "admin");

		final Client client = ClientBuilder.newClient();
		client.register(token);
		
		final WebTarget target   = client.target(this.urlString + "secure?name=" + this.txtSource.getValue());
		final String    response = target.request().get(String.class);

		this.txtResponse.setValue(response);
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #cmdLoad}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdLoad_onClick(final ClickEvent<Button> event)
	{
		final Client client = ClientBuilder.newClient();

		final WebTarget target   = client.target(this.urlString + "customer/" + this.txtCustomerIDCall.getValue());
		final String    response = target.request().get(String.class);

		final Gson                 gson = new Gson();
		final CustomerTransferable ct   = gson.fromJson(response, CustomerTransferable.class);

		this.txtCustomerid.setValue(ct.getCustomerid());
		this.txtAddress.setValue(ct.getAddress());
		this.txtCity.setValue(ct.getCity());
		this.txtCompanyname.setValue(ct.getCompanyname());
		this.txtCountry.setValue(ct.getCountry());
		this.txtFax.setValue(ct.getFax());
		this.txtPhone.setValue(ct.getPhone());
		this.txtPostalcode.setValue(ct.getPostalcode());
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.details           = new Details();
		this.horizontalLayout  = new HorizontalLayout();
		this.formLayout        = new FormLayout();
		this.formItem          = new FormItem();
		this.label2            = new Label();
		this.txtSource         = new TextField();
		this.cmdSend           = new Button();
		this.cmdSendSecure     = new Button();
		this.formItem2         = new FormItem();
		this.label3            = new Label();
		this.txtResponse       = new TextField();
		this.verticalLayout2   = new VerticalLayout();
		this.label4            = new Label();
		this.label5            = new Label();
		this.label6            = new Label();
		this.label7            = new Label();
		this.details2          = new Details();
		this.verticalLayout    = new VerticalLayout();
		this.formLayout2       = new FormLayout();
		this.formItem3         = new FormItem();
		this.label             = new Label();
		this.txtCustomerIDCall = new TextField();
		this.cmdLoad           = new Button();
		this.form              = new FormLayout();
		this.formItem11        = new FormItem();
		this.lblCustomerid     = new Label();
		this.txtCustomerid     = new TextField();
		this.formItem4         = new FormItem();
		this.lblPostalcode     = new Label();
		this.txtPostalcode     = new TextField();
		this.formItem5         = new FormItem();
		this.lblCompanyname    = new Label();
		this.txtCompanyname    = new TextField();
		this.formItem6         = new FormItem();
		this.lblCity           = new Label();
		this.txtCity           = new TextField();
		this.formItem7         = new FormItem();
		this.lblAddress        = new Label();
		this.txtAddress        = new TextField();
		this.formItem8         = new FormItem();
		this.lblCountry        = new Label();
		this.txtCountry        = new TextField();
		this.formItem9         = new FormItem();
		this.lblPhone          = new Label();
		this.txtPhone          = new TextField();
		this.formItem10        = new FormItem();
		this.lblFax            = new Label();
		this.txtFax            = new TextField();

		this.details.setSummaryText("Send a simple String");
		this.details.setOpened(true);
		this.formLayout.setResponsiveSteps(
			new FormLayout.ResponsiveStep("0px", 1, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("500px", 2, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("1000px", 3, FormLayout.ResponsiveStep.LabelsPosition.ASIDE));
		this.label2.setText("String to send");
		this.cmdSend.setText("Send");
		this.cmdSendSecure.setText("Send Secure");
		this.cmdSendSecure.setIcon(VaadinIcon.LOCK.create());
		this.label3.setText("Response");
		this.label4.setText("Hints");
		this.label5.setText("1. This application has to be started by a Tomcat ");
		this.label6.setText("2. Maybe it is necessary to change the URL which is used in the code.");
		this.label7.setText(
			"3. For \"Send Secure\" with authentication it is necessary to enter the following line to the tomcat-user.xml -- <user username=\"admin\" password=\"admin\" roles=\"restconsumer\"/>");
		this.details2.setSummaryText("Load entity by ID");
		this.details2.setOpened(true);
		this.formLayout2.setResponsiveSteps(
			new FormLayout.ResponsiveStep("0px", 1, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("500px", 2, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("1000px", 3, FormLayout.ResponsiveStep.LabelsPosition.ASIDE));
		this.label.setText("CustomerID (ALFKI, ANTON, ...)");
		this.cmdLoad.setText("Load");
		this.form.setResponsiveSteps(
			new FormLayout.ResponsiveStep("0px", 1, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("500px", 2, FormLayout.ResponsiveStep.LabelsPosition.TOP));
		this.lblCustomerid.setText("Customerid");
		this.lblPostalcode.setText("Postalcode");
		this.lblCompanyname.setText("Companyname");
		this.lblCity.setText("City");
		this.lblAddress.setText("Address");
		this.lblCountry.setText("Country");
		this.lblPhone.setText("Phone");
		this.lblFax.setText("Fax");

		this.label2.setSizeUndefined();
		this.label2.getElement().setAttribute("slot", "label");
		this.txtSource.setWidthFull();
		this.txtSource.setHeight(null);
		this.cmdSend.setSizeUndefined();
		this.cmdSendSecure.setSizeUndefined();
		this.formItem.add(this.label2, this.txtSource, this.cmdSend, this.cmdSendSecure);
		this.label3.setSizeUndefined();
		this.label3.getElement().setAttribute("slot", "label");
		this.txtResponse.setWidthFull();
		this.txtResponse.setHeight(null);
		this.formItem2.add(this.label3, this.txtResponse);
		this.formLayout.add(this.formItem, this.formItem2);
		this.label4.setSizeUndefined();
		this.label5.setSizeUndefined();
		this.label6.setSizeUndefined();
		this.label7.setSizeUndefined();
		this.verticalLayout2.add(this.label4, this.label5, this.label6, this.label7);
		this.formLayout.setWidthFull();
		this.formLayout.setHeight(null);
		this.verticalLayout2.setSizeUndefined();
		this.horizontalLayout.add(this.formLayout, this.verticalLayout2);
		this.horizontalLayout.setWidthFull();
		this.horizontalLayout.setHeight(null);
		this.details.setContent(this.horizontalLayout);
		this.label.setSizeUndefined();
		this.label.getElement().setAttribute("slot", "label");
		this.txtCustomerIDCall.setWidthFull();
		this.txtCustomerIDCall.setHeight(null);
		this.cmdLoad.setSizeUndefined();
		this.formItem3.add(this.label, this.txtCustomerIDCall, this.cmdLoad);
		this.formLayout2.add(this.formItem3);
		this.lblCustomerid.setSizeUndefined();
		this.lblCustomerid.getElement().setAttribute("slot", "label");
		this.txtCustomerid.setWidthFull();
		this.txtCustomerid.setHeight(null);
		this.formItem11.add(this.lblCustomerid, this.txtCustomerid);
		this.lblPostalcode.setSizeUndefined();
		this.lblPostalcode.getElement().setAttribute("slot", "label");
		this.txtPostalcode.setWidthFull();
		this.txtPostalcode.setHeight(null);
		this.formItem4.add(this.lblPostalcode, this.txtPostalcode);
		this.lblCompanyname.setSizeUndefined();
		this.lblCompanyname.getElement().setAttribute("slot", "label");
		this.txtCompanyname.setWidthFull();
		this.txtCompanyname.setHeight(null);
		this.formItem5.add(this.lblCompanyname, this.txtCompanyname);
		this.lblCity.setSizeUndefined();
		this.lblCity.getElement().setAttribute("slot", "label");
		this.txtCity.setWidthFull();
		this.txtCity.setHeight(null);
		this.formItem6.add(this.lblCity, this.txtCity);
		this.lblAddress.setSizeUndefined();
		this.lblAddress.getElement().setAttribute("slot", "label");
		this.txtAddress.setWidthFull();
		this.txtAddress.setHeight(null);
		this.formItem7.add(this.lblAddress, this.txtAddress);
		this.lblCountry.setSizeUndefined();
		this.lblCountry.getElement().setAttribute("slot", "label");
		this.txtCountry.setWidthFull();
		this.txtCountry.setHeight(null);
		this.formItem8.add(this.lblCountry, this.txtCountry);
		this.lblPhone.setSizeUndefined();
		this.lblPhone.getElement().setAttribute("slot", "label");
		this.txtPhone.setWidthFull();
		this.txtPhone.setHeight(null);
		this.formItem9.add(this.lblPhone, this.txtPhone);
		this.lblFax.setSizeUndefined();
		this.lblFax.getElement().setAttribute("slot", "label");
		this.txtFax.setWidthFull();
		this.txtFax.setHeight(null);
		this.formItem10.add(this.lblFax, this.txtFax);
		this.form.add(this.formItem11, this.formItem4, this.formItem5, this.formItem6, this.formItem7, this.formItem8,
			this.formItem9, this.formItem10);
		this.formLayout2.setSizeUndefined();
		this.form.setSizeUndefined();
		this.verticalLayout.add(this.formLayout2, this.form);
		this.verticalLayout.setWidthFull();
		this.verticalLayout.setHeight(null);
		this.details2.setContent(this.verticalLayout);
		this.add(this.details, this.details2);
		this.setWidthFull();
		this.setHeight(null);

		this.cmdSend.addClickListener(this::cmdSend_onClick);
		this.cmdSendSecure.addClickListener(this::cmdSendSecure_onClick);
		this.cmdLoad.addClickListener(this::cmdLoad_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private FormLayout       formLayout, formLayout2, form;
	private Details          details, details2;
	private Button           cmdSend, cmdSendSecure, cmdLoad;
	private HorizontalLayout horizontalLayout;
	private VerticalLayout   verticalLayout2, verticalLayout;
	private Label            label2, label3, label4, label5, label6, label7, label, lblCustomerid, lblPostalcode,
		lblCompanyname, lblCity, lblAddress, lblCountry, lblPhone, lblFax;
	private TextField        txtSource, txtResponse, txtCustomerIDCall, txtCustomerid, txtPostalcode, txtCompanyname,
		txtCity, txtAddress, txtCountry, txtPhone, txtFax;
	private FormItem         formItem, formItem2, formItem3, formItem11, formItem4, formItem5, formItem6, formItem7,
		formItem8, formItem9, formItem10;
	// </generated-code>
	
}
